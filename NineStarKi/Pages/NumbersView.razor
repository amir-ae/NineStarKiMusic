@page "/{id:int}"
@using Microsoft.AspNetCore.Http;
@using static NineStarKi.Models.Calculator;
@inject IHttpContextAccessor httpContextAccessor


<link href="/style.css" rel="stylesheet" />
<h5 class="text-center text-primary m-2 p-2"> @Personality.Key.@Personality.Value </h5>
<div class="py-2 pr-3">
    <div class="row text-center pt-2">
        <div class="text-right col-2">
            @foreach (var res in FormattedResult)
            {
                <div key=@res.Key class="text-secondary">
                    @res.Key
                </div>
            }
        </div>
        <div class="text-left col-10">
            @foreach (var res in FormattedResult)
            {
                <div key=@res.Key class="number text-primary">
                    @foreach (var num in res.Value)
                    {
                        <span key=@num class="number text-brown mx-1" @onclick="() => HandleClick(num)">
                            @num
                        </span>
                    }
                </div>
            }
        </div>
    </div>
    <div class="text-center text-warning m-2 p-2">
        <h6>Click a number for music!"</h6>
    </div>
    <div class="text-center m-2 p-2">
        <NavLink class="btn btn-secondary mx-1 px-2" href="/">Back</NavLink>
        <NavLink class="btn btn-primary mx-1 px-2" href=@($"{Id}/Music")>Suggestions</NavLink>
    </div>

</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    private NavigationManager NavManager { get; set; }

    public Personality Personality { get; set; } = new Personality();

    public Dictionary<string, List<string>> FormattedResult { get; set; }

    protected override void OnParametersSet()
    {
        string number = Id.ToString();
        Personality.Key = number[0];
        Personality.Value = $"{number[1]}.{number[2]}";
        FormattedResult = FormatResult(ProcessNumber(Personality)).Reverse()
            .ToDictionary(entry => entry.Key, entry => entry.Value);
    }

    public HttpContext Context => httpContextAccessor.HttpContext;

    private void HandleClick(string num)
    {
        NavManager.NavigateTo($"/{Id}/Music/{num}");
    }

    SortedDictionary<string, List<string>> FormatResult(Relation[,] r)
    {
        SortedDictionary<string, List<string>> f = new SortedDictionary<string, List<string>>();

        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
            {
                string key = f.Where(pair => pair.Key == PadStr(r[i, j].percentage))
                    .Select(pair => pair.Key)
                    .FirstOrDefault();
                if (String.IsNullOrEmpty(key))
                {
                    f.Add(PadStr(r[i, j].percentage), new List<string>() { r[i, j].number });
                }
                else
                {
                    f[key].Add(r[i, j].number);
                }
            }

        }
        return f;
    }

    string PadStr(string str)
    {
        string paded = string.Empty;

        if (str.Length == 2)
        {
            paded = str.Insert(0, "  ");
        }
        else if (str.Length == 3)
        {
            paded = str.Insert(0, " ");
        }
        else
        {
            paded = str;
        }
        return paded;
    }
}

