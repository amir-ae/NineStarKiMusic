@page "/{id:int}/Music/{number:int}"
@inherits OwningComponentBase<IRepository>
@using Microsoft.Extensions.Caching.Distributed;
@inject IDistributedCache cache;
@using System.Text.Json;

<h5 class="text-center text-brown m-2 p-2"> @Personality.Key.@Personality.Value </h5>

@foreach (var occasion in Occasions)
{
    <MusicView Name=@occasion.Name Musicians=@MusiciansToShow(occasion) DataType=@DataType />
}

<div class="text-center m-2 p-2">
    <NavLink class="btn btn-secondary mx-1 px-2" href=@BackUrl>Back</NavLink>
    <button class="btn btn-primary mx-1 px-2" @onclick="HandleClick">@ButtonLabel</button>
</div>

@code {
    public IRepository Repository => Service;

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int Number { get; set; }

    public Personality Personality { get; set; }

    public IEnumerable<Musician> Musicians { get; set; }

    public IEnumerable<Occasion> Occasions { get; set; }

    public int DataType { get; set; } = 0;

    public string ButtonLabel { get; set; } = "Recordings";

    public string BackUrl => $"/{Id}";

    public IEnumerable<Musician> MusiciansToShow(Occasion o)
    {
        var occasionMusicians = Musicians
            .Where(m => m.Occasions.Contains(o));
        var distinctMusicians = occasionMusicians
            .GroupBy(m => m.Name)
            .Select(g => g.First())
            .ToList();
        return DataType == 1 ? occasionMusicians : distinctMusicians;
    }

    protected override void OnParametersSet()
    {
        string number = Number.ToString();
        Personality = new Personality(number);

        Musicians = Repository.GetMusicians(number);

        Occasions = Musicians.SelectMany(m => m.Occasions).Distinct().OrderBy(o => o.Id);
    }

    private void HandleClick()
    {
        switch (DataType)
        {
            case 0:
                DataType = 1;
                ButtonLabel = "Numbers";
                break;
            case 1:
                DataType = 2;
                ButtonLabel = "Genres";
                break;
            case 2:
                DataType = 0;
                ButtonLabel = "Recordings";
                break;
            default:
                DataType = 0;
                ButtonLabel = "Recordings";
                break;
        }
    }
}