@page "/"
@using BlazorDateRangePicker
@inherits OwningComponentBase<IRepository>
@inject IRepository Repository
@inject ConstantData ConstantData
@inject Calculator Calculator
@inject NavigationManager NavManager

<link href="/style.css" rel="stylesheet" />
<EditForm Model="Personality" OnValidSubmit="@Submit" Context="formContext">
    <DataAnnotationsValidator />
    <div>
        <div class="text-center p-1 mt-3">
            <div class="form-group">
                <label class="h6">Date of Birth</label>
                <div class="px-5">
                    <DateRangePicker @ref="Picker"
                                     SingleDatePicker="true"
                                     Culture="@(System.Globalization.CultureInfo.GetCultureInfo("en-EN"))"
                                     MinDate="@(new DateTime(1500, 01, 01))"
                                     MaxDate="@(new DateTime(2500, 12, 31))"
                                     OnSelectionStart="OnSelection" />
                </div>
            </div>

            <div class="form-group">
                <label class="h6">Nine Star Ki</label>
                <ValidationMessage For="@(() => Personality.Value)" />
                <div class="h5 px-5">
                    <select @bind="selectKey" style="width: 85px">
                        <option value="">---</option>
                        @foreach (KeyValuePair<char, ConstantData.Element> star in ConstantData.StarElement)
                        {
                            <option key="@star.Key" value="@star.Key">@star.Key.ToString()</option>
                        }
                    </select>
                    <select @bind="selectValue" style="width: 97px">
                        <option value="">---</option>
                        @if (Personality.Key != '\0')
                        {
                            foreach (string value in ConstantData.StarMap[Personality.Key])
                            {
                                <option key="@value" value="@value">@value</option>
                            }
                        }
                    </select>
                </div>
            </div>

            <div className={"text-center"}>
                <button type="submit" class="btn btn-primary m-2">
                    Select
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private DateRangePicker Picker { get; set; }

    private Personality Personality { get; set; } = new Personality();

    private char selectKey
    {
        get { return Personality.Key; }
        set
        {
            Personality.Key = value;
            Personality.Value = "";
            Picker.TStartDate = null;
        }
    }

    private string selectValue
    {
        get { return Personality.Value; }
        set
        {
            Personality.Value = value;
            Picker.TStartDate = null;
        }
    }

    private void OnSelection(DateTimeOffset date)
    {
        string selectionResult = Calculator.Personality(date);
        Personality.Key = selectionResult[0];
        Personality.Value = selectionResult.Substring(2);
    }

    private void Submit()
    {
        string number = $"{Personality.Key}{Personality.Value[0]}{Personality.Value[2]}";
        NavManager.NavigateTo($"/{number}");
    }
}
